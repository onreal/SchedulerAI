steps:
  # Build scheduler
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-f', 'Dockerfile.Api', '-t', 'gcr.io/$PROJECT_ID/scheduler-api', '.']

  # Build generative
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-f', 'Dockerfile.GenerativeApi', '-t', 'gcr.io/$PROJECT_ID/generative-api', '.']

  # Build migrator
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-f', 'Dockerfile.Migrator', '-t', 'gcr.io/$PROJECT_ID/migrator', '.']

  # Run migrator
  - name: 'gcr.io/$PROJECT_ID/migrator'
    entrypoint: 'sh'
    args: ['-c', 'dotnet ef database update --project SchedulerApi.Infrastructure/SchedulerApi.Infrastructure.csproj --startup-project SchedulerApi.Api/SchedulerApi.Api.csproj']

  # Deploy scheduler to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - run
      - deploy
      - scheduler-api
      - --image=gcr.io/$PROJECT_ID/scheduler-api
      - --region=us-central1
      - --platform=managed
      - --allow-unauthenticated

  # Deploy generative to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - run
      - deploy
      - generative-api
      - --image=gcr.io/$PROJECT_ID/generative-api
      - --region=us-central1
      - --platform=managed
      - --allow-unauthenticated

images:
  - 'gcr.io/$PROJECT_ID/scheduler-api'
  - 'gcr.io/$PROJECT_ID/generative-api'
  - 'gcr.io/$PROJECT_ID/migrator'
